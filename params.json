{
  "name": "Noze.io Todo MVC",
  "tagline": "Noze.io: Simple Connect + Redis based TodoMVC backend implementation",
  "body": "<h2>Noze.io Todo MVC Backend Example\r\n  <img src=\"https://pbs.twimg.com/profile_images/725354235056017409/poiNAOlB_400x400.jpg\"\r\n       align=\"right\" />\r\n</h2>\r\n\r\n![Swift3](https://img.shields.io/badge/swift-3-blue.svg)\r\n![macOS](https://img.shields.io/badge/os-macOS-green.svg?style=flat)\r\n![tuxOS](https://img.shields.io/badge/os-tuxOS-green.svg?style=flat)\r\n![Travis](https://api.travis-ci.org/NozeIO/noze-todomvc.svg?branch=master&style=flat)\r\n\r\nNoze.io TodoMVC is a simple [Todo-Backend](http://todobackend.com)\r\nexample implementation.\r\n\r\nIt uses the Noze.io \r\n[Connect](https://github.com/NozeIO/Noze.io/blob/master/Sources/connect/README.md)\r\nand\r\n[Redis](https://github.com/NozeIO/Noze.io/blob/master/Sources/redis/README.md)\r\nmodules.\r\n\r\nThe example is coming with two backends: a simple in-memory store as well as a\r\nRedis backend which persists the todos as Redis hashes and uses Redis INCR to\r\nmaintain a primary key sequence.\r\n\r\n<center><img src=\"http://noze.io/images/screenshot-todo-mvc-redis-1.jpeg\" alt=\"\" \r\n             style=\"border: 1px solid #DADADA; padding: 4px;\"/></center>\r\n\r\nCheck it out! It actually works :-)\r\n\r\n### Building and running the example\r\n\r\nYou can just checkout the repository and build via Swift Package Manager\r\n\r\n    git clone https://github.com/NozeIO/noze-todomvc.git\r\n    cd noze-todomvc\r\n    swift build # or just `make`\r\n\r\nIf you have Redis installed locally, you can then run the example via\r\n\r\n    helge@ZeaPro noze-todomvc (develop)*$ .build/debug/todo-mvc\r\n    Server listening: <Server: #http=0  *.*.*.*:1337 fd=4 backlog=5>\r\n    INFO: Connected to Redis <RedisClient: Connected 7 idle>\r\n\r\nand connect to it via\r\n[http://todobackend.com/client/index.html?http://localhost:1337/](http://todobackend.com/client/index.html?http://localhost:1337/).\r\n\r\n### Running in Docker\r\n\r\nAlso included is a Docker configuration which starts Redis and everything\r\nrequired. To run:\r\n\r\n    docker-compose-up\r\n\r\nand again, connect to it via\r\n[http://todobackend.com/client/index.html?http://localhost:1337/](http://todobackend.com/client/index.html?http://localhost:1337/).\r\n\r\n### Running the TodoBackend.com Testsuite\r\n\r\nJust connect via:\r\n[http://todobackend.com/specs/index.html?http://localhost:1337/](http://todobackend.com/specs/index.html?http://localhost:1337/).\r\n\r\n### About Noze.io\r\n\r\n[**Noze.io**](http://noze.io/) \r\nis an attempt to carry over the [Node.js](http://nodejs.org/)\r\nideas into *pure* [Swift](http://swift.org).\r\n[**Noze.io**](http://noze.io/) \r\nis built around type-safe back-pressure aware pull-streams\r\n(using Swift generics)\r\noperating on batches of items. Instead of just operating on bytes,\r\noperate on batches of Unicode lines or database records or HTML\r\nresponses or - you get the idea.\r\nBe efficient: Stream everything and ÃŸatch.\r\n\r\n\r\n### Who\r\n\r\nNoze.io is brought to you by\r\n[The Always Right Institute](http://www.alwaysrightinstitute.com)\r\nand\r\n[ZeeZide](http://zeezide.de).\r\nWe wouldn't be sad if more people would like to join the effort :-)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}